use std::fmt;
use std::fmt::{Debug, Display};

#[repr(u16)]
#[derive(FromPrimitive, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum AttributeId {
    None,
    Content,
    Val,
    Id,
    Space,
    S,
    Off,
    Code,
    Mask,
    Index,
    Nonzero,
    Piece,
    Name,
    Scope,
    Startbit,
    Size,
    Table,
    Ct,
    Minlen,
    Base,
    Number,
    Context,
    Parent,
    Subsym,
    Line,
    Source,
    Length,
    First,
    Plus,
    Shift,
    Endbit,
    Signbit,
    Endbyte,
    Startbyte,
    Version,
    Bigendian,
    Align,
    Uniqbase,
    Maxdelay,
    Uniqmask,
    Numsections,
    Defaultspace,
    Delay,
    Wordsize,
    Physical,
    Scopesize,
    Symbolsize,
    Varnode,
    Low,
    High,
    Flow,
    Contain,
    I,
    Numct,
    Section,
    Labels,
}

#[repr(u8)]
#[derive(FromPrimitive, Clone, Copy, PartialEq, Eq, Hash)]
pub enum AttributeKind {
    None,
    Boolean,
    PositiveSignedInteger,
    NegativeSignedInteger,
    UnsignedInteger,
    BasicAddressSpace,
    SpecialAddressSpace,
    String,
}

#[repr(u16)]
#[derive(FromPrimitive, Clone, Copy, PartialEq, Eq, Hash, Debug)]
pub enum ElementId {
    None,
    ConstReal,
    VarnodeTpl,
    ConstSpaceid,
    ConstHandle,
    OpTpl,
    MaskWord,
    PatBlock,
    Print,
    Pair,
    ContextPat,
    Null,
    OperandExp,
    OperandSym,
    OperandSymHead,
    Oper,
    Decision,
    Opprint,
    InstructPat,
    CombinePat,
    Constructor,
    ConstructTpl,
    Scope,
    VarnodeSym,
    VarnodeSymHead,
    Userop,
    UseropHead,
    Tokenfield,
    Var,
    Contextfield,
    HandleTpl,
    ConstRelative,
    ContextOp,
    //
    Sleigh,
    Spaces,
    Sourcefiles,
    Sourcefile,
    Space,
    SymbolTable,
    ValueSym,
    ValueSymHead,
    ContextSym,
    ContextSymHead,
    EndSym,
    EndSymHead,
    SpaceOther,
    SpaceUnique,
    AndExp,
    DivExp,
    LshiftExp,
    MinusExp,
    MultExp,
    NotExp,
    OrExp,
    PlusExp,
    RshiftExp,
    SubExp,
    XorExp,
    Intb,
    EndExp,
    Next2Exp,
    StartExp,
    EpsilonSym,
    EpsilonSymHead,
    NameSym,
    NameSymHead,
    Nametab,
    Next2Sym,
    Next2SymHead,
    StartSym,
    StartSymHead,
    SubtableSym,
    SubtableSymHead,
    ValuemapSym,
    ValuemapSymHead,
    Valuetab,
    VarlistSym,
    VarlistSymHead,
    OrPat,
    Commit,
    ConstStart,
    ConstNext,
    ConstNext2,
    ConstCurspace,
    ConstCurspaceSize,
    ConstFlowref,
    ConstFlowrefSize,
    ConstFlowdest,
    ConstFlowdestSize,
}

impl Display for ElementId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        Debug::fmt(self, f)
    }
}
